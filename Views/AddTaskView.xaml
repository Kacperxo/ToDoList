<UserControl x:Class="ToDoList.Views.AddTaskView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
             xmlns:local="clr-namespace:ToDoList.Views"
             mc:Ignorable="d" 
             d:DesignHeight="400" d:DesignWidth="600">

    <UserControl.Resources>
        <!-- Styl, który będzie pokazywał błędy walidacji dla TextBox -->
        <Style TargetType="TextBox">
            <Setter Property="Validation.ErrorTemplate">
                <Setter.Value>
                    <ControlTemplate>
                        <StackPanel>
                            <!-- Czerwona ramka wokół kontrolki z błędem -->
                            <Border BorderBrush="Red" BorderThickness="1">
                                <AdornedElementPlaceholder x:Name="adorner"/>
                            </Border>
                            <!-- Komunikat o błędzie pod kontrolką -->
                            <TextBlock Text="{Binding AdornedElement.(Validation.Errors)[0].ErrorContent}" 
                                       Foreground="Red"
                                       FontSize="10"
                                       Margin="0,2,0,0"/>
                        </StackPanel>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <!-- Dodatkowy Trigger, aby ramka była widoczna tylko gdy jest błąd -->
                <Trigger Property="Validation.HasError" Value="True">
                    <Setter Property="ToolTip" 
                            Value="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors)[0].ErrorContent}"/>
                </Trigger>
            </Style.Triggers>
        </Style>
    </UserControl.Resources>

    <Grid>
        <StackPanel Margin="10" Orientation="Vertical">
            
            <!-- Title -->
            <TextBlock Text="Tytuł:"/>
            <TextBox Text="{Binding Title, 
                Mode=TwoWay, 
                UpdateSourceTrigger=PropertyChanged,
                ValidatesOnNotifyDataErrors=True}"/>

            <!-- Description -->
            <TextBlock Text="Opis:"/>
            <TextBox TextWrapping="Wrap" AcceptsReturn="True"
                Text="{Binding Description, 
                Mode=TwoWay, 
                UpdateSourceTrigger=PropertyChanged,
                ValidatesOnNotifyDataErrors=True}"/>
            
            <!-- Due Date -->
            <TextBlock Text="Data wykonania zadania:"/>
            <DatePicker SelectedDate="{Binding SelectedDueDate, Mode=TwoWay}"/>

            <!-- Due Time -->
            <TextBlock Text="Czas wykonania zadania:"/>
            <xctk:TimePicker Value="{Binding SelectedDueTime, Mode=TwoWay}"
                             Format="Custom"
                             FormatString="HH:mm"
                             TimeInterval="00:05:00"
                             ShowButtonSpinner="True"
                             EndTime="23:59"/>

            <!-- ========== Buttons ========== -->
            <StackPanel Orientation="Horizontal">
                
                <!-- Add button -->
                <Button Content="Dodaj zadanie!"
                        Command="{Binding AddTaskButton}"
                        Margin="0,0,5,0"/>

                <!-- Cancel button -->
                <Button Content="Anuluj"
                        Command="{Binding CancelAddingTaskButton}"/>
                
            </StackPanel>
        </StackPanel>
    </Grid>
</UserControl>
