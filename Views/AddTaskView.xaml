<UserControl x:Class="ToDoList.Views.AddTaskView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
             xmlns:local="clr-namespace:ToDoList.Views"
             mc:Ignorable="d" 
             d:DesignHeight="400" d:DesignWidth="600">

    <UserControl.Resources>
        <!-- Styl, który będzie pokazywał błędy walidacji dla TextBox -->
        <Style TargetType="TextBox">
            <Setter Property="Validation.ErrorTemplate">
                <Setter.Value>
                    <ControlTemplate>
                        <StackPanel>
                            <!-- Czerwona ramka wokół kontrolki z błędem -->
                            <Border BorderBrush="#CA3E47" BorderThickness="1">
                                <AdornedElementPlaceholder x:Name="adorner"/>
                            </Border>
                            <!-- Komunikat o błędzie pod kontrolką -->
                            <TextBlock Text="{Binding AdornedElement.(Validation.Errors)[0].ErrorContent}" 
                                       Foreground="#CA3E47"
                                       FontSize="10"
                                       Margin="0,2,0,0"/>
                        </StackPanel>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <!-- Dodatkowy Trigger, aby ramka była widoczna tylko gdy jest błąd -->
                <Trigger Property="Validation.HasError" Value="True">
                    <Setter Property="ToolTip" 
                            Value="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors)[0].ErrorContent}"/>
                </Trigger>
            </Style.Triggers>
        </Style>
    </UserControl.Resources>

    <Grid Margin="12">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>
        <StackPanel Grid.Column="0" Orientation="Vertical">
            
            
            <!-- Title -->
            <Grid Margin="0,0,0,10">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>

                <TextBlock Grid.Column="0" 
                           Text="Tytuł:"/>
            <TextBox Grid.Column="1" 
                     Text="{Binding Title, 
                Mode=TwoWay, 
                UpdateSourceTrigger=PropertyChanged,
                ValidatesOnNotifyDataErrors=True}"
                     Margin="5,0,0,5"/>
                </Grid>

                <!-- Due Date -->
            <Grid Margin="0,0,0,10">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>

                <TextBlock Grid.Column="0"
                           VerticalAlignment="Center"
                           Text="Data wykonania zadania:"/>
                <DatePicker Grid.Column="1"
                            HorizontalContentAlignment="Right"
                            SelectedDate="{Binding SelectedDueDate, Mode=TwoWay}"
                            Margin="5,0,0,0"/>
            </Grid>
            <!-- Due Time -->
            <Grid Margin="0,0,0,10">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                
                <TextBlock Grid.Column="0"
                           VerticalAlignment="Center"
                           Text="Czas wykonania zadania:"/>
                <xctk:TimePicker Grid.Column="1" 
                                 TextAlignment="Center"
                                 Value="{Binding SelectedDueTime, Mode=TwoWay}"
                                 Margin="5,0,0,0"
                                 Format="Custom"
                                 FormatString="HH:mm"
                                 TimeInterval="00:05:00"
                                 ShowButtonSpinner="True"
                                 EndTime="23:59"/>
            </Grid>
            <!-- ========== Buttons ========== -->
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <!-- Add button -->
                <Button Grid.Column="0" 
                        Content="Dodaj zadanie!"
                        Command="{Binding AddTaskButton}"
                        Margin="0,0,5,0"/>

                <!-- Cancel button -->
                <Button Grid.Column="1" Content="Anuluj"
                        Command="{Binding CancelAddingTaskButton}"/>
                
            </Grid>
        </StackPanel>

        <Grid Grid.Column="1" Margin="10,0,0,0">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <!-- Description -->
            <TextBlock Grid.Row="0" 
                       Margin="0,0,0,5"
                       Text="Opis:"/>
            
            <Border Grid.Row="1"  
                BorderBrush="LightGray" 
                BorderThickness="1" 
                CornerRadius="4"
                Padding="5"
                Background="#FFF6F6F6">
                <TextBox Text="{Binding Description, 
                        Mode=TwoWay, 
                        UpdateSourceTrigger=PropertyChanged,
                        ValidatesOnNotifyDataErrors=True}"
                        TextWrapping="Wrap"
                        AcceptsReturn="True"
                        VerticalScrollBarVisibility="Auto"
                        BorderThickness="0"
                        Background="Transparent"/>
            </Border>
        </Grid>
    </Grid>
</UserControl>
